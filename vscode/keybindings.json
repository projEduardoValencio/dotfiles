// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+d",
    "command": "-extension.vim_ctrl+d",
    "when": "editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"
  },
  {
    "key": "ctrl+'",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+shift+[BracketLeft]",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+.",
    "command": "-acceptSelectedCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+.",
    "command": "-workbench.action.terminal.quickFix",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+,",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+4",
    "command": "commentbars.generateQuick"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "o",
    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+p",
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+[Semicolon]",
    "command": "workbench.action.quickOpenNavigateNext"
  },
  {
    "key": "ctrl+alt+z",
    "command": "workbench.action.toggleZenMode",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  {
    "key": "ctrl+k z",
    "command": "-workbench.action.toggleZenMode",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+d",
    "command": "extension.vim_ctrl+d"
  },
  {
    "key": "ctrl+alt+m",
    "command": "bookmarks.toggleLabeled"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.focusBelowGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.focusBelowGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusAboveGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusRightGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusLeftGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.terminal.focus",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.view.explorer",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+k",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.view.explorer",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusSideBar",
    "when": "explorerViewletFocus && !inputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusRightGroup",
    "when": "explorerViewletFocus && inputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusRightGroup",
    "when": "sideBarFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusRightGroup",
    "when": "explorerViewletFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "explorerViewletFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "sideBarFocus"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.view.explorer",
    "when": "editorTextFocus && !workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+v",
    "command": "-editor.action.clipboardPasteAction"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "quickOpenWidgetVisible || suggestWidgetVisible || quickFixWidgetVisible || inputBoxVisible"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "quickOpenWidgetVisible || suggestWidgetVisible || quickFixWidgetVisible || inputBoxVisible"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenNavigatePrevious"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenNavigateNextInTerminalPicker"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenNavigatePreviousInViewPicker"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenNavigateNextInViewPicker"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+down",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "down",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+up",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "up",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+n",
    "command": "suggestWidget.nextSuggestion",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "ctrl+p",
    "command": "suggestWidget.prevSuggestion",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "ctrl+n",
    "command": "interactive.history.next",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
  },
  {
    "key": "down",
    "command": "-interactive.history.next",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
  },
  {
    "key": "ctrl+n",
    "command": "interactive.history.next",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.repl' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
  },
  {
    "key": "down",
    "command": "-interactive.history.next",
    "when": "!suggestWidgetVisible && activeEditor == 'workbench.editor.repl' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
  },
  {
    "key": "ctrl+n",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "down",
    "command": "-list.focusDown",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "ctrl+n",
    "command": "history.showNext",
    "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
  },
  {
    "key": "down",
    "command": "-history.showNext",
    "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+n",
    "command": "editor.action.scrollDownHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "down",
    "command": "-editor.action.scrollDownHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "ctrl+n",
    "command": "cursorDown",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "ctrl+p",
    "command": "cursorUp",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "down",
    "command": "-selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "up",
    "command": "-selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetVisible"
  }
]
